---
# notes: requires user_name

# adjust permissions
- name: Adjust permissions
  shell: chown {{ user_name }}:www-data /home/ldap/{{ user_name }}
  become: true

# allow each user to ssh into its own machines
- name: Generating ssh keys for {{ user_name }} (1/3)
  shell: mkdir -p ~/.ssh && chmod 700 ~/.ssh
  become: true
  become_user: "{{ user_name }}"
  vars:
    allow_world_readable_tmpfiles: true

# cat id_rsa.pub to check if key already exists!
- name: Generating ssh keys for {{ user_name }} (2/3)
  shell: cat ~/.ssh/id_rsa.pub || ssh-keygen -b 3072 -t rsa -f ~/.ssh/id_rsa -N ""
  become: true
  become_user: "{{ user_name }}"
  vars:
    allow_world_readable_tmpfiles: true

# check if key is present before
- name: Generating ssh keys for {{ user_name }} (3/3)
  shell: grep -F -f ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys || echo '# This users own local key' >> ~/.ssh/authorized_keys && cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
  become: true
  become_user: "{{ user_name }}"
  vars:
    allow_world_readable_tmpfiles: true

- name: Create directory for web access
  shell: mkdir -p ~/{{ user_webdir }}/data
  become: true
  become_user: "{{ user_name }}"
  vars:
    allow_world_readable_tmpfiles: true

# check if link is present before creation
- name: Make symlink 1
  shell: ln -s /usr/local/lib/server-site/site ~/{{ user_webdir }}/site
  become: true
  become_user: "{{ user_name }}"
  vars:
    allow_world_readable_tmpfiles: true
  ignore_errors: true

- name: Make sysmlink 2
  shell: ln -s ~/{{ user_webdir }}/site/index.php ~/{{ user_webdir }}/index.php
  become: true
  become_user: "{{ user_name }}"
  vars:
    allow_world_readable_tmpfiles: true
  ignore_errors: true

- name: Add worker to known hosts
  shell: ssh-keyscan -H {{ hostvars[inner_item]['ansible_host'] }} >> ~/.ssh/known_hosts
  become: true
  become_user: "{{ user_name }}"
  vars:
    allow_world_readable_tmpfiles: true
  loop: "{{ groups['vms'] }}"
  loop_control:
    loop_var: inner_item

  # TODO: include server logic
- name: Add user {{ user_name }}
  shell: (echo "{{ smb_master_pw }}"; echo "{{ smb_master_pw }}") | smbpasswd -a {{ user_name }}
  become: true

- name: Restart samba
  service:
    name: smbd
    state: restarted
  become: true
